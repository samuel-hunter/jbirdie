(defun null (x) (eq x nil))

(defun assoc (key alist)
    (cond
        ((null alist) nil)
        ((eq key (car (car alist))) (car alist))
        (t (assoc key (cdr alist)))))

;; Aliases for car, cdr
(defconst first car)
(defconst rest cdr)

(defun nth (index place)
    (cond
        ((null place) nil)
        ((eq index 0) (car place))
        (t (nth (- index 1) (cdr place)))))